import hashlib
import os

def calcular_hash(file_path, hash_algorithm="sha256", buffer_size=8192):
    """Calcula el hash de un archivo."""
    hasher = hashlib.new(hash_algorithm)
    with open(file_path, "rb") as file:
        buffer = file.read(buffer_size)
        while buffer:
            hasher.update(buffer)
            buffer = file.read(buffer_size)
    return hasher.hexdigest()

def escanear_carpeta(carpeta_path, malware_hashes):
    """Escanea una carpeta en busca de archivos maliciosos."""
    for root, dirs, files in os.walk(carpeta_path):
        for file_name in files:
            file_path = os.path.join(root, file_name)
            escanear_archivo(file_path, malware_hashes)

def escanear_archivo(file_path, malware_hashes):
    """Escanea un archivo en busca de coincidencias con hashes conocidos de malware."""
    file_hash = calcular_hash(file_path)
    if file_hash in malware_hashes:
        print(f"El archivo '{file_path}' coincide con un hash de malware conocido.")
    else:
        print(f"El archivo '{file_path}' no parece ser malicioso.")

# Lista de hashes conocidos de malware (esto debería ser mucho más grande y actualizado en la realidad)
malware_hashes = set([
    "c4ca4238a0b923820dcc509a6f75849b",  # Hash de ejemplo
    # Agrega más hashes conocidos aquí
])

# Ruta a la carpeta que deseas escanear
carpeta_a_escanear = "ruta/a/la/carpeta"

# Realiza el escaneo de la carpeta
escanear_carpeta(carpeta_a_escanear, malware_hashes)
